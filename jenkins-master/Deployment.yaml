apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      serviceAccountName: jenkins-admin
      containers:
        - name: jenkins
          image: ACCT_NUMBER.dkr.ecr.us-west-1.amazonaws.com/REPO:IMAGE_VERSION
          imagePullPolicy: Always
          env: 
            - name: CASC_JENKINS_CONFIG
              value: /var/lib/jenkins/jenkins-casc.yaml
          ports:
            - name: httpport
              containerPort: 8080 
            - name: jnlpport
              containerPort: 50000
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home/
            - name: jenkins-casc-volume
              mountPath: /var/lib/jenkins  
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
              claimName: jenkins-pv-claim
        - name: jenkins-casc-volume
          configMap: 
            name: jenkins-casc-cm      
# the config map is created through make file
---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/aws-ebs
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

--- 

apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
spec:
  selector: 
    app: jenkins-server  
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: http
    - protocol: TCP
      port: 50000
      targetPort: 50000
      name: agent

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-admin

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jenkins-admin
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins-admin
subjects:
- kind: ServiceAccount
  name: jenkins-admin
  namespace: CUSTOM_NAMESPACE

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-jenkins
spec: 
  ingressClassName: nginx
  rules:
  - host: HOSTNAME
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
                name: jenkins-service
                port:
                  number: 8080